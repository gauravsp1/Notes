Interview

JS-


How JS works, about event loop, callback Queue?

Explain promises , async await

JavaScript Arrow Functions

How to make a copy of array or object?
use spread operator
Array.concat()
Array.slice(0)


Why are functions called First Class Function in JS

Event delegate




React-
Features of React?

Diff types of Hooks 

State management ?

Explain Redux

Use of "Key" in Component...if not provided then which error (also used in Virtual DOM)

How to pass data from parent to child and vice versa

Have used axios? put vs post 

Life Cycle Methods of react


local storage vs session storage




Coding-

for(let i=0;i<10;i++){
    setTimeout(()=>{
        console.log(i)
    },1000)


var value = 2568,
    sum = 0;

while (value>0) {
    sum = sum+ (value % 10);
    value = Math.floor(value / 10);
}

console.log(sum);


Second Max
arr = [1, 180, 10, 7, 56, 90,140,200]

function largest(arr){
    let max=0
    let secondMax=0
    arr.forEach((value)=>{
        secondMax=max>value?secondMax<value?value:secondMax :max
         max=max<value?value:max
          })
    console.log("secondMax",secondMax)
    console.log("max",max)
}

largest(arr)



const arr=[null, 2,5,'',"ello",4,undefined,8,null];

console.log("Find",arr.find(i=>i));  //Find 2
console.log("Filter",arr.filter(i=>i));  // Filter (5) [2, 5, "ello", 4, 8]
console.log("Reduce",arr.reduce(i=>i));  // Reduce null
console.log("Map",arr.map(i=>i));  //  Map (9) [null, 2, 5, "", "ello", 4, undefined, 8, null]

arr=[1,2,3,4,6]
console.log("Mapss",arr.map(i=>i>3));



const arr=[null, 2,5,'',"ello",4,undefined,8,null];

console.log("Find",arr.find(i=>i)); 
console.log("Filter",arr.filter(i=>i));  
console.log("Reduce",arr.reduce(i=>i)); 
console.log("Map",arr.map(i=>i)); 

arr=[1,2,3,4,6]
console.log("Mapss",arr.map(i=>i>3));

let a={​​​​​a:1}​​​​​;
let b={​​​​​a:1}​​​​​;
let c=a;
a===c; // true 
a===b; // false


let array=[1, 2, 3, 4, ,5, 6, 7, 8, 9, 10]
// {even: [2, 4, 6, 8], odd: [1, 3, 5, 7, 9]}

let result=array.reduce((acc,item)=>{
        // acc["even"]=[]
        // acc["odd"]=[]

        if(item %2===0){
             acc.even.push(item)   
        } else{
            acc.odd.push(item)
        }
        return acc
},{
    even:[],
    odd:[]
})

console.log("Result",result);



// Sentence case 
// Write a method which take one parameter that is string containing sentence and return a string with first letter of word is capital and rest is in lower case ?
// const name = 'deepaK khanDelwal PqR;
// Expected result -> Deepak Khandelwal Pqr


// function CapitalFistLetter(value){
    
//    const result= value.toLowerCase().split(" ").map((item)=>{
//                     return  newsentence= newsentence.charAt(0).toUpperCase() +newsentence.slice(1)
//         }).join(" ")

//         console.log(result);
   
// }



// var arr = [[1,2],[3,4],[4,5]] //[1,2,3,4,5]

// let newarray= arr.flat()
// let newarray= arr.flat(Infinity)

// function Flatten(arr){
//   someNewArray=arr.reduce((acc,item)=>{
//       if(Array.isArray(item)){
//         acc= acc.concat(Flatten(item))
//       }
//       else{
//         acc.push(item) 
//         or 
//         acc=[...acc,item]
//       }
//       return acc
//   },[])
//       return someNewArray
// }
// console.log(Flatten(arr));


// function a(){
//   console.log("a")
//   setTimeout(()=>{console.log("b")}, 0)
//   Promise.resolve().then(_ => console.log("c"))
//   console.log("c2")
//   console.log("c3")
// }
// a()



// obj = {
// 	a: 1,
// 	b: 2,
// 	c: {
// 		d: 4
// 	}
// }
// obj2 = {...obj};
// obj2.c.d = 5;
// console.log(obj);
// console.log(obj2);


// const arr =[{age: 15, isSelected: false}, {age:20, isSelected: false},
//     { age: 25 , isSelected:false}]

//     let arry4=arr.reduce((total,value)=>{
//     if(value.age>18){
//          value.isSelected=true
//    total.push(value)
//     }
//    return total
// },[])

// console.log("newarray",arry4);	


sum(1)(2)(3)(4)
sum(1)(2)(3)(4)()
	
// function sum(a){
//     return function (b){
//       if(b){
//         return sum (a+b)
//       }
//       else{
//         return a
//       }
//     }
// }

// const sum=(a)=>(b)=> b?sum(a+b):a